1. Ноутбук с соревнования Kaggle по проекту 6 "Выбираем авто выгодно"
2. Граббер ссылок с auto.ru: auto.ru_links_grabber_bybrand.py
3. Парсер ссылок c auto.ru: auto.ru_get_content.py
4. Ноутбук с обработкой выгрузки: Project6_train_preproc.py
4. Обработанная выгрузка с auto.ru, использованная в проекте: cars_data.csv


Задача проекта:

- Построение ML-модели прогнозирования цены на автомобиль на основе данных об авто. Соревнование в Kaggle, лидерборд по метрике MAPE.


1. Какова была ваша роль в команде?

- Работал в одиночку

2. Какой частью своей работы вы остались особенно довольны?

- Было очень интересно, изучил много дополнительных материалов. Наконец-то разобрался с парсингом. Познакомился с CatBoost.
- Инсайт, что стоимость авто в сабмите можно уменьшить на 5-10%, чтобы цены просоответствовали прошлому периоду.
- Создал признаки на основе equipment_dict. В тех ноутбуках что я видел, до его разбора мало кто добрался.

3. Что не получилось сделать так, как хотелось? Над чем ещё стоит поработать?

- Катастрофически не хватило времени на проект. Нормально получилось сделать парсинг (на который вместе с обработкой ушла уйма времени) и EDA. 
- На основном этапе ML пришлось гнать изо всех сил и заглядывать в ноутбуки к коллегам.
- Не хватило времени на новые признаки.  
- Выгрузку делал только по тем маркам авто, которые были в тестовом датасете. Судя по результатам на лидерборде - не хватило данных, надо было выгружать все марки подряд по дате размещения объявлений.
- Просто не успел проверить модели кросвалидацией на переобучение.

Наверное надо было проситься в команду, но боялся подвести коллег из-за своей занятости.

4. Что интересного и полезного вы узнали в этом модуле?

- Подбор параметров модели и подбор моделей в стекинг съедают огромное количество ресурсов и времени.

5. Что является вашим главным результатом при прохождении этого проекта?

- Опыт.


